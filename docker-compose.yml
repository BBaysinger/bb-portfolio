# Docker Compose configuration for portfolio site
#
# Usage:
#   ▶ Local (MacBook)
#     docker compose --profile local up --build
#
#   ▶ AWS EC2 (Production only)
#     docker compose --profile prod up -d
#
#   ▶ AWS EC2 (Development only)
#     docker compose --profile dev up -d
#
#   ▶ AWS EC2 (Production + Development together)
#     docker compose --profile prod --profile dev up -d

services:
  # ====================
  # Production services (EC2)
  # ====================
  backend-prod:
    profiles: ["prod"]
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: portfolio-backend-prod
    container_name: portfolio-backend-prod
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env.prod
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend-prod:
    profiles: ["prod"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: portfolio-frontend-prod
    container_name: portfolio-frontend-prod
    ports:
      - "3001:3000"
    env_file:
      - ./frontend/.env.prod
    restart: unless-stopped
    depends_on:
      backend-prod:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ====================
  # Development services (EC2 sandbox)
  # ====================
  backend-dev:
    profiles: ["dev"]
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: portfolio-backend-dev
    container_name: portfolio-backend-dev
    ports:
      - "4000:3000"
    env_file:
      - ./backend/.env.dev
    restart: unless-stopped

  frontend-dev:
    profiles: ["dev"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: portfolio-frontend-dev
    container_name: portfolio-frontend-dev
    ports:
      - "4001:3000"
    env_file:
      - ./frontend/.env.dev
    restart: unless-stopped
    depends_on:
      backend-dev:
        condition: service_started

  # ====================
  # Local development services (your Mac)
  # ====================
  backend-local:
    profiles: ["local"]
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: portfolio-backend-local
    container_name: portfolio-backend-local
    command: npm run dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5050:3000"
    env_file:
      - ./backend/.env.local
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped

  frontend-local:
    profiles: ["local"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    image: portfolio-frontend-local
    container_name: portfolio-frontend-local
    command: npm run dev
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5051:3000"
    env_file:
      - ./frontend/.env.local
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped
    depends_on:
      backend-local:
        condition: service_started

# Custom network for service isolation
networks:
  default:
    name: portfolio-network

volumes:
  frontend_node_modules:
