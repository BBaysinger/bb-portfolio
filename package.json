{
  "name": "bb-portfolio-monorepo-root",
  "private": true,
  "scripts": {
    "build:all": "npm run format && concurrently \"npm run build:backend\" \"npm run build:frontend\" --names \"backend,frontend\" --prefix-colors \"blue,green\"",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "docker:build": "COMPOSE_PROFILES=local docker compose build",
    "docker:up": "COMPOSE_PROFILES=local docker compose up --build",
    "docker:up:detached": "COMPOSE_PROFILES=local docker compose up --build -d",
    "docker:down": "COMPOSE_PROFILES=local docker compose down",
    "docker:logs": "COMPOSE_PROFILES=local docker compose logs -f",
    "docker:ssg:build": "COMPOSE_PROFILES=local-ssg docker compose build",
    "docker:ssg:up": "COMPOSE_PROFILES=local-ssg docker compose up --build",
    "docker:ssg:up:detached": "COMPOSE_PROFILES=local-ssg docker compose up --build -d",
    "docker:ssg:down": "COMPOSE_PROFILES=local-ssg docker compose down",
    "docker:ssg:logs": "COMPOSE_PROFILES=local-ssg docker compose logs -f",
    "docker:build:backend": "docker build -t bhbaysinger/portfolio-backend:dev ./backend",
    "docker:build:frontend": "docker build -t bhbaysinger/portfolio-frontend:dev ./frontend",
    "docker:push:backend": "docker push bhbaysinger/portfolio-backend:dev",
    "docker:push:frontend": "docker push bhbaysinger/portfolio-frontend:dev",
    "docker:build-push": "npm run docker:build:backend && npm run docker:build:frontend && npm run docker:push:backend && npm run docker:push:frontend",
    "baremetalDev": "npm run baremetalDev:all",
    "baremetalDev:all": "concurrently \"npm run baremetalDev:backend\" \"npm run baremetalDev:frontend\" --names \"backend,frontend\" --prefix-colors \"blue,green\"",
    "baremetalDev:tabs": "osascript -e 'tell application \"Terminal\" to do script \"cd \\\"$(pwd)/backend\\\" && npm run dev\"' && osascript -e 'tell application \"Terminal\" to do script \"cd \\\"$(pwd)/frontend\\\" && npm run dev\"'",
    "baremetalDev:backend": "cd backend && npm run dev",
    "baremetalDev:frontend": "cd frontend && npm run dev",
    "format": "prettier --write .",
    "lint": "eslint .",
    "precommit": "prettier --write . && eslint . --fix && tsc --noEmit",
    "prepush": "npm run precommit && npm test",
    "sync:json5": "tsx scripts/sync-json5.ts",
    "sync:secrets:dry": "tsx scripts/sync-github-secrets.ts BBaysinger/bb-portfolio ./.github-secrets.json5 --dry-run",
    "sync:secrets": "tsx scripts/sync-github-secrets.ts BBaysinger/bb-portfolio ./.github-secrets.json5",
    "update:deps": "concurrently \"ncu -u\" \"cd backend && ncu -u\" \"cd frontend && ncu -u\" --names \"root,backend,frontend\" --prefix-colors \"yellow,blue,green\"",
    "install:all": "concurrently \"npm install\" \"cd backend && npm install\" \"cd frontend && npm install\" --names \"root,backend,frontend\" --prefix-colors \"yellow,blue,green\"",
    "media:export": "bash scripts/export-media.sh",
    "seed:media": "tsx scripts/import-media-from-seedings.ts"
  },
  "devDependencies": {
    "@next/eslint-plugin-next": "^15.5.4",
    "@types/glob": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^8.44.1",
    "@typescript-eslint/parser": "^8.44.1",
    "concurrently": "^9.2.1",
    "eslint": "^9.36.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.22",
    "glob": "^11.0.3",
    "globals": "^16.4.0",
    "ignore": "^7.0.5",
    "jiti": "^2.6.0",
    "json5": "^2.2.3",
    "prettier": "^3.6.2",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.6",
    "typescript": "^5.9.2"
  }
}
