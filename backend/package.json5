{
  // Package name for the Payload backend
  "name": "bb-portfolio-backend",
  // Version of this backend package
  "version": "1.0.0",
  // Short description (Payload starter template)
  "description": "A blank template to get started with Payload 3.0",
  // License type (MIT is very permissive)
  "license": "MIT",
  // Declares this as an ES module project
  "type": "module",
  // Common dev scripts
  "scripts": {
    // Prettier + Build: Format all files with Prettier, then run TypeScript build to validate
    // This approach helps to ensure that formatting doesn't break the build, because that does happen sometimes
    // The command is short for frequent use (I use it very frequently, and *every* time before commit)
    "precommit": "prettier --write . && tsc -b",
    // Production build with increased memory and deprecation warnings suppressed
    "build": "cross-env NODE_OPTIONS=\"--no-deprecation --max-old-space-size=8000\" next build",
    // Start development server with deprecation warnings suppressed
    "dev": "cross-env NODE_OPTIONS=--no-deprecation PORT=3001 next dev",
    // Clean Next.js cache and run dev server (useful when build cache is corrupted)
    "devsafe": "rm -rf .next && cross-env NODE_OPTIONS=--no-deprecation next dev",
    // Generates Payload importmap file (used when importing from plugins or dynamic code)
    "generate:importmap": "cross-env NODE_OPTIONS=--no-deprecation payload generate:importmap",
    // Generates TypeScript types from Payload collections and globals
    "generate:types": "cross-env NODE_OPTIONS=--no-deprecation payload generate:types",
    // Run Next.js linter with deprecation warnings suppressed
    "lint": "cross-env NODE_OPTIONS=--no-deprecation next lint",
    // Start Payload-only CLI (e.g., to seed or run utilities)
    "payload": "cross-env NODE_OPTIONS=--no-deprecation payload",
    // Start production server
    "start": "cross-env NODE_OPTIONS=--no-deprecation next start",
    // Run both integration and E2E tests (sequential)
    "test": "pnpm run test:int && pnpm run test:e2e",
    // Run Playwright tests (end-to-end testing framework)
    "test:e2e": "cross-env NODE_OPTIONS=\"--no-deprecation --no-experimental-strip-types\" pnpm exec playwright test",
    // Run Vitest (unit/integration tests) using its config file
    "test:int": "cross-env NODE_OPTIONS=--no-deprecation vitest run --config ./vitest.config.mts",
  },
  // Runtime dependencies for backend and CMS functionality
  "dependencies": {
    // MongoDB adapter for Payload CMS
    "@payloadcms/db-mongodb": "3.58.0",
    // Nodemailer email adapter for Payload CMS (handles SMTP email sending, password resets, notifications)
    "@payloadcms/email-nodemailer": "3.58.0",
    // Enables Payload-Next.js integration (server-side rendering and routing)
    "@payloadcms/next": "3.58.0",
    // Payload Cloud tools (optional if self-hosting)
    "@payloadcms/payload-cloud": "3.58.0",
    // Rich text editor using Lexical (modern alternative to Slate)
    "@payloadcms/richtext-lexical": "3.58.0",
    "@payloadcms/storage-s3": "3.58.0",
    // Payload's core UI components
    "@payloadcms/ui": "3.58.0",
    // Cross-platform environment variable setting (Windows/Unix compatibility)
    "cross-env": "^10.1.0",
    // Environment variable loader (reads .env files into process.env)
    "dotenv": "17.2.3",
    // Express.js web server framework (v5 for latest features)
    "express": "^5.1.0",
    // GraphQL query language runtime (required by Payload's GraphQL API)
    "graphql": "^16.11.0",
    // Next.js framework for frontend/backend integration
    "next": "15.5.4",
    // Payload CMS core package
    "payload": "3.58.0",
    // React version to match Next.js 15
    "react": "19.2.0",
    // React DOM library for rendering React components (required by Next.js and Payload UI)
    "react-dom": "^19.2.0",
    // High-performance image processing (required for Payload image fields)
    "sharp": "0.34.4",
    // Converts strings into URL-friendly slugs (useful for dynamic routing)
    "slugify": "^1.6.6",
  },
  // Development-only tools and type definitions
  "devDependencies": {
    // E2E test runner
    "@playwright/test": "1.55.1",
    // Testing utilities for React components
    "@testing-library/react": "16.3.0",
    // Express.js TypeScript definitions
    "@types/express": "^5.0.3",
    // Node.js TypeScript definitions (latest for Node 18+)
    "@types/node": "^24.6.2",
    // React 19 types
    "@types/react": "19.2.0",
    // React DOM 19 types
    "@types/react-dom": "19.2.0",
    // Vite React plugin (enables React support in Vitest)
    "@vitejs/plugin-react": "5.0.4",
    // ESLint JavaScript/TypeScript linter (v9 for latest rules)
    "eslint": "^9.36.0",
    // Next.js ESLint configuration (includes React and accessibility rules)
    "eslint-config-next": "15.5.4",
    // Browser DOM simulation for Node.js testing environments
    "jsdom": "27.0.0",
    // Standalone version of Playwright test runner
    "playwright": "1.55.1",
    // Playwright core library (used for browser automation)
    "playwright-core": "1.55.1",
    // Code formatter with opinionated defaults
    "prettier": "^3.6.2",
    // TypeScript compiler (v5.9 for latest language features)
    "typescript": "5.9.3",
    // Vite path mapping support (resolves TypeScript path aliases)
    "vite-tsconfig-paths": "5.1.4",
    // Fast unit test runner (modern Jest alternative)
    "vitest": "3.2.4",
  },
  // Minimum versions for runtime tools
  "engines": {
    // Node 18.20.2+ or 20.9.0+ (for ES modules and latest security patches)
    "node": "^18.20.2 || >=20.9.0",
    // PNPM v9 or v10 (for workspace support and faster installs)
    "pnpm": "^9 || ^10",
  },
  // Custom PNPM config to limit which dependencies are built from source
  "pnpm": {
    // Only build these dependencies from source (others use prebuilt binaries)
    "onlyBuiltDependencies": [
      // Image processing library (native compilation required)
      "sharp", // Module resolution utility
      // JavaScript bundler (native compilation for performance)
      "esbuild", // Module resolution utility
      // Module resolution utility
      "unrs-resolver", // Module resolution utility
    ],
  },
}