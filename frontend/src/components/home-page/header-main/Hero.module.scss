@use "@/styles/mixins" as *;
@use "@/styles/variables" as *;

header.hero {
  visibility: visible;
  display: flex;
  flex-direction: column;
  position: relative;
  display: flex;
  align-items: bottom;
  justify-content: flex-end;
  letter-spacing: 1px;
  user-select: none;
  z-index: 10;
  overflow: hidden;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  background-image: url("/images/common/bg-grad.svg");
  background-color: black;
  background-size: cover;
  @include staticRange(--hero-padding, 10px, 18px, $b320, $b576);

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    opacity: 0.7;
    z-index: 0;
    box-sizing: border-box;
    background-repeat: no-repeat;
    background-position: top center;
    background-size: cover;
  }

  @keyframes fadeInOut {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
}

.debug {
  position: absolute;
  font-size: 16px;
  color: rgba(255, 255, 255, 0.8);
  max-width: 700px;
  top: 200px;
  right: 0;
}

.gridController {
  position: absolute;
  width: 100vw;
  height: 100%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
  z-index: 1;

  & > * {
    border: 1px solid #000;
    position: absolute;
    overflow: hidden;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

.borderBlinker {
  position: absolute;
  z-index: 2;
}

.slingerWrapper {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 3;
}

.spinner {
  position: absolute;
  bottom: 100px;
  right: 100px;
  width: 50px;
  z-index: 10000;
}

// Only for positioning.
.scrollCtaWrapper {
  position: absolute;
  bottom: var(--hero-padding);
  right: var(--hero-padding);
  z-index: 10000;
  border: 1px solid red;
  transform: translateX(200px);
  transition:
    transform 0.8s,
    border 0.8s;
  :global(.hasSlungDelay.notScrolledOut) & {
    border: 0 !important;
    transform: translateX(0) !important;
  }
  @include remRange(font-size, 18px, 25px);
}

a.scrollCta {
  position: absolute;
  bottom: 0;
  right: 0;
  color: #fff;
  transition: right 0.8s;
  transition-delay: 2s;
  animation: fadeBounce 2.5s infinite forwards;
  animation-play-state: paused;
  rotate: -90deg;
  transform-origin: bottom right;
  text-decoration: none;
  text-wrap: nowrap;
  color: #000;
  font-weight: 700;
  animation-play-state: paused;
  :global(.hasSlung.isSlingerIdle) & {
    animation-play-state: running !important;
  }
  :global(.isSlingerIdle.notScrolledOut.hasSlung) & {
    animation-play-state: paused;
    transition-delay: 0s;
  }
}

@keyframes fadeBounce {
  0% {
    opacity: 0.25;
    transform: translateX(110%);
  }
  50% {
    opacity: 1;
    transform: translateX(100%);
  }
  100% {
    opacity: 0.25;
    transform: translateX(110%);
  }
}

.scrollCtaInner {
  aspect-ratio: 500/152;
  height: 2.9em;
  padding-top: 1.14em;
  padding-left: 2.8em;
  margin-left: -0.57em;
  margin-top: -0.8em;
  margin-right: -0.19em;
  margin-bottom: -0.26em;
  z-index: -1;
  display: block;
  letter-spacing: 0.01em;
  pointer-events: none;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  background-image: url("/images/home/orange-arrow.webp");
}

.debug {
  display: none;
  position: absolute;
  z-index: 10000;
  color: white;
  left: 0;
  top: 0;
  margin-right: auto;
}

:global(.slinger) {
  &::before {
    content: " ";
    opacity: 0;
    transition: opacity 0.3s linear;
    position: absolute;
    width: 146px;
    height: 48px;
    color: white;
    font-size: 16px;
    padding-top: 12px;
    padding-left: 10px;
    left: -142px;
    top: -22px;
    pointer-events: none;
    transform-origin: 100% 50%;
    transition: opacity 0.5s linear;
    background-repeat: no-repeat;
    animation: bounce 2s infinite forwards;

    :global(.notDragged) & {
      display: block;
      opacity: 1;
      background-image: url("/images/home/orb-arrow-green.svg");
    }

    :global(.hasDragged.notSlung) & {
      display: block;
      opacity: 1;
      background-image: url("/images/home/orb-arrow-yellow.svg");
    }
  }

  // Reusing the dragged delay feature to prevent rendering
  // of the transparent slinger CTA
  :global(.hasSlungDelay) &::before {
    display: none;
  }
}

.orbText {
  position: absolute;
  z-index: 1000;
  display: block;
  color: #fff;
  bottom: 0;
  right: 0;
  pointer-events: none;
  top: 2.5px;
  left: -194px;
  width: 200px;
  height: 1em;
  transform-origin: bottom right;
  transform: rotate(45deg);
  mask-image: linear-gradient(black, black);
  mask-repeat: no-repeat;
  mask-size: 98px 1em;
  mask-position: center;
  animation: bounceMask 2s infinite forwards;
  :global(.hasSlung) & {
    display: none;
  }
  &::before {
    content: "Grab a hold! Grab a hold! Grab a hold!\00a0";
    position: absolute;
    bottom: 10px;
    right: 0;
    background-size: cover;
    text-wrap: nowrap;
    text-align: right;
    animation: scrollText 2s linear infinite;
    transform-origin: bottom right;
    display: none;
    animation-delay: -0.5s; /* Starts as if 0.5s has already passed */

    :global(.notDragged) & {
      display: block;
    }
    :global(.hasDragged.notSlung) & {
      content: "Give a toss! Give a toss! Give a toss!\00a0";
      display: block;
    }
  }
}

@keyframes bounce {
  0% {
    transform: rotate(45deg) translateX(4px);
  }
  50% {
    transform: rotate(45deg) translateX(-20px);
  }
  100% {
    transform: rotate(45deg) translateX(4px);
  }
}

@keyframes bounceMask {
  0% {
    mask-position: 53px center;
  }
  50% {
    mask-position: 32px center;
  }
  100% {
    mask-position: 53px center;
  }
}

@keyframes scrollText {
  0% {
    transform: translate(24.6%, 50%);
  }
  100% {
    transform: translate(-8.6%, 50%);
  }
}

.message {
  z-index: 3;
}

.foreground {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  height: 100%;
  padding: var(--hero-padding);
}
