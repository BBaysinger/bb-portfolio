@use "@/styles/mixins" as *;
@use "@/styles/variables" as *;

header.hero {
  visibility: visible;
  position: fixed;
  display: flex;
  flex-direction: column;
  position: relative;
  display: flex;
  align-items: bottom;
  justify-content: flex-end;
  letter-spacing: 1px;
  user-select: none;
  z-index: 10;
  overflow: hidden;
  @include staticRange(--hero-padding, 14px, 18px, $b320px, $b576px);

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    opacity: 0.7;
    z-index: 0;
    box-sizing: border-box;
    background-repeat: no-repeat;
    background-position: top center;
    background-size: cover;
  }

  @keyframes fadeInOut {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
}

.debug {
  position: absolute;
  font-size: 16px;
  color: rgba(255, 255, 255, 0.8);
  max-width: 700px;
  top: 200px;
  right: 0;
}

.gridController {
  position: absolute;
  width: 100vw;
  height: 100%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
  z-index: 1;

  & > * {
    border: 1px solid #000;
    position: absolute;
    overflow: hidden;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

.borderBlinker {
  position: absolute;
  z-index: 2;
}

.slingerWrapper {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 3;
}

.spinner {
  position: absolute;
  bottom: 100px;
  right: 100px;
  width: 50px;
  z-index: 10000;
}

// Only for scaling.
.scrollCtaWrapper {
  position: absolute;
  bottom: var(--hero-padding);
  right: var(--hero-padding);
  z-index: 10000;
  width: 1px;
  height: 1px;
  @include remRange(font-size, 18px, 25px);
}

a.scrollCta {
  position: absolute;
  bottom: 0;
  right: 0;
  color: #fff;
  transition: right 0.8s;
  transition-delay: 2s;
  animation: fadeBounce 2.5s infinite forwards;
  animation-play-state: paused;
  rotate: -90deg;
  transform-origin: bottom right;
  text-decoration: none;
  text-wrap: nowrap;
  color: #000;
  font-weight: 700;
  :global(.isSlingerIdle) & {
    animation-play-state: running !important;
  }

  :global(.notSlingerIdle) & {
    opacity: 1 !important;
  }

  .hasSlung & {
  }

  .hasScrolledOut & {
    transition-delay: 0s;
    animation-play-state: paused;
  }
}

@keyframes fadeBounce {
  0% {
    opacity: 0.25;
    transform: translateX(110%);
  }
  50% {
    opacity: 1;
    transform: translateX(100%);
  }
  100% {
    opacity: 0.25;
    transform: translateX(110%);
  }
}

.scrollCtaInner {
  margin-left: -0.57em;
  aspect-ratio: 500/152;
  height: 2.9em;
  padding-top: 1.14em;
  padding-left: 2.8em;
  margin-top: -0.8em;
  margin-right: -0.19em;
  margin-bottom: -0.26em;
  z-index: -1;
  display: block;
  letter-spacing: 0.01em;
  pointer-events: none;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  background-image: url("/images/home/orange-arrow.webp");
}

.debug {
  display: none;
  position: absolute;
  z-index: 10000;
  color: white;
  left: 0;
  top: 0;
  margin-right: auto;
}

:global(.slinger) {
  &::before {
    content: "Give a toss!";
    opacity: 0;
    transition: opacity 0.3s linear;
    position: absolute;
    width: 146px;
    height: 48px;
    background-image: url("/images/home/ball-bolt.svg");
    color: white;
    font-size: 16px;
    padding-top: 12px;
    padding-left: 10px;
    left: -142px;
    top: -22px;
    pointer-events: none;
    transform-origin: 100% 50%;
    transform: rotate(45deg);
    transition: opacity 0.5s linear;
  }

  :global(.notDragged) &::before {
    display: block;
    opacity: 1;
  }

  // Reusing the dragged delay feature to prevent rendering
  // of the transparent slinger CTA
  :global(.hasDraggedDelay) &::before {
    display: none;
  }
}

.message {
  z-index: 3;
}
