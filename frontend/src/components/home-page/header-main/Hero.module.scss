@use "@/styles/mixins" as *;
@use "@/styles/variables" as *;

header.hero {
  visibility: visible;
  display: flex;
  flex-direction: column;
  position: relative;
  align-items: bottom;
  justify-content: space-between;
  letter-spacing: 1px;
  user-select: none;
  z-index: 10;
  overflow: hidden;
  background-repeat: no-repeat;
  background-image: url("/images/common/bg-grad.svg");
  background-color: black;
  background-size: 100% 100%;
  min-height: var(--client-height, 100vh);
  @include staticRange(--hero-padding, 10px, 18px, $b320, $b576);

  @keyframes fadeInOut {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
}

.gridController {
  position: absolute;
  overflow: hidden;
  z-index: 1;

  & > * {
    position: absolute;
    overflow: hidden;
  }
}

.borderBlinker {
  position: absolute;
  z-index: 2;
}

.slingerWrapper {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 3;
}

.spinner {
  position: absolute;
  bottom: 100px;
  right: 100px;
  width: 50px;
  z-index: 10000;
}

.scrollCtaWrapper {
  position: absolute;
  bottom: var(--hero-padding);
  right: var(--hero-padding);
  z-index: 10000;
  transform: translateX(200px);
  transition:
    transform 0.8s,
    border 0.8s;
  // Slide in once the user has collided the slinger (after the post-collision delay)
  // Support both current and legacy flag names.
  :global(.hasAfterCollidedDelay.notScrolledOut) &,
  :global(.hasSlungDelay.notScrolledOut) & {
    border: 0 !important;
    transform: translateX(0);
  }
  @include remRange(font-size, 18px, 25px);

  a {
    color: #000;
    &:visited,
    &:active {
      color: #000;
    }
  }
}

a.scrollCta {
  position: absolute;
  bottom: 0;
  right: 0;
  font-weight: 700;
  text-decoration: none;
  text-wrap: nowrap;
  rotate: -90deg;
  transform-origin: bottom right;
  transition: right 0.8s;
  transition-delay: 2s;
  animation: fadeBounce 2.5s infinite forwards;
  animation-play-state: paused;
  transition:
    opacity 0.5s,
    transform 0.5s !important;
  // Start bouncing attention animation when visible and slinger is idle
  // Prefer the newer flags, but keep legacy for safety.
  :global(.hasAfterCollidedDelay.isSlingerIdle) &,
  :global(.hasCollided.isSlingerIdle) &,
  :global(.hasSlung.isSlingerIdle) & {
    animation-play-state: running !important;
  }
  :global(.notSlingerIdle.notScrolledOut) & {
    opacity: 1 !important;
    animation-play-state: paused;
    transition:
      opacity 0.5s,
      transform 0.5s !important;
    opacity: 1;
    transform: translateX(100%);
  }
}

@keyframes fadeBounce {
  0% {
    opacity: 0.25;
    transform: translateX(110%);
  }
  50% {
    opacity: 1;
    transform: translateX(100%);
  }
  100% {
    opacity: 0.25;
    transform: translateX(110%);
  }
}

.scrollCtaInner {
  aspect-ratio: 500/152;
  height: 2.9em;
  padding-top: 1.14em;
  padding-left: 2.8em;
  margin-left: -0.57em;
  margin-top: -0.8em;
  margin-right: -0.19em;
  margin-bottom: -0.26em;
  z-index: -1;
  display: block;
  letter-spacing: 0.01em;
  pointer-events: none;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  background-image: url("/images/home/orange-arrow.webp");
}

.message {
  z-index: 3;
}

.foreground {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: var(--hero-padding);
}

.titleBranding {
  margin-top: auto;
}

.debug {
  display: none;
  position: absolute;
  z-index: 10000;
  color: white;
  left: 0;
  top: 0;
  margin-right: auto;
  font-size: 16px;
  max-width: 700px;
}
